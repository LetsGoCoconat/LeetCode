class Solution {
	public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
  
		PriorityQueue<Integer> minHeap = generateMinHeap(l1, l2);
		ListNode dummy = new ListNode(-1);
		ListNode nodePtr = dummy;
		while(!minHeap.isEmpty()) {
			ListNode currentNode = new ListNode(minHeap.remove());
			nodePtr.next = currentNode;
			nodePtr = nodePtr.next;
		}
    
		return dummy.next;
    
	}
	private PriorityQueue<Integer> generateMinHeap(ListNode l1, ListNode l2) {
		PriorityQueue<Integer> minHeap = new PriorityQueue<>();
		while(l1 != null) {
			minHeap.add(l1.val); 
			l1 = l1.next;
      
		}
		while(l2 != null) { 
			minHeap.add(l2.val); 
			l2 = l2.next;
      
		}
		return minHeap;
	}
}
